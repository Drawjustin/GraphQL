GraphQL의 서버 구성요소 및 동작 과정


1. 스키마
2. 미들웨어
3. 리졸버
4. AST



1. 스키마
- 스키마는 GraphQL 서버의 데이터 구조와 API 형태를 정의
Type, Query, Mutation, Subscription 4가지로 나눌 수 있다.
SDL를 통해 스키마를 작성

2. 미들웨어
- 웹서버 애플리케이션에서 트래픽 대부분이 가장 먼저 도착하는 곳
사용자를 인증하고 요청권한을 검증하거나 트래픽에 대한 로깅, 또는 모니터링를 한다.
Node에서는 middleware, Spring에서는 security가 이에 해당된다.

미들웨어를 통과한 그래픽은 GraphQL 엔진에 도착
GraphQL 엔진은 수신된 트래픽의 쿼리를 엔진이 이해할 수 있는 구문으로 파싱
-> 이 파싱된 구문을 AST라고 부른다

3. AST
- Validation 파싱된 AST를 기반으로 쿼리의 구조와 문법을 검사
이 단계에서 잘못된 요청이 있으면 오류를 반환

- Execution 트리구조의 AST를 탐색하여, 어떤 데이터를 요청하는지 파악한 후
요청에 해당하는 리졸버로 호출


4. 리졸버
- 특정 GraphQL 작업이 실행될 때 실제 데이터를 가져오거나 변환하는 함수
Node.js에서는 JavaScript, Java에서는 비즈니스 로직이 해당됨




전체적인 동작과정
1. 클라이언트 요청
2. 미들웨어
3. 쿼리 파싱
4. 유효성검사
5. 실행
6. 요청 처리
7. 리졸버 데이터 처리 및 반환
8. 클라이언트 응답

실제 개발자 과정
1. 클라이언트 요청(프론트)
2. 미들웨어(백엔드)
3. 실행(백엔드,실행보단 스키마 작성)
4. 요청처리(백엔드)
5. 클라이언트 응답(프론트)

Clinet -> (Query, Mutation, Subscription) -> Middleware -> Query 파싱(AST로 변환) -> 유효성 검사 -> 실행(Resolver 함수 호출) -> 요청 처리(실제 데이터 처리) -> Resolver 데이터 처리 및 반환(최종 응답 객체 생성) -> 클라이언트 응답 